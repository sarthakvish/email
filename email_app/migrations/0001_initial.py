# Generated by Django 3.2.9 on 2022-03-05 10:08

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaigns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('subject', models.CharField(max_length=255)),
                ('from_email', models.CharField(max_length=255)),
                ('messenger', models.CharField(choices=[('EMAIL', 'Email')], default='EMAIL', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CampaignsLogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_date', models.DateTimeField(auto_now_add=True)),
                ('email_count', models.PositiveIntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.campaigns')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('company_name', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=10)),
                ('company_website', models.CharField(blank=True, max_length=255)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('company_overview', models.TextField(blank=True)),
                ('is_gst_registered', models.BooleanField(default=False)),
                ('gst_details', models.CharField(blank=True, max_length=255)),
                ('address', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GetList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('body', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Subscribers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('subscriber_status', models.CharField(choices=[('ENABLED', 'Enabled'), ('BLACKLISTED', 'Blacklisted')], default='ENABLED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile')),
            ],
            options={
                'unique_together': {('company', 'email')},
            },
        ),
        migrations.CreateModel(
            name='We360SubscriberReportData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriber_we360_id', models.PositiveIntegerField()),
                ('subscriber_name', models.CharField(max_length=100)),
                ('mail_to', models.CharField(max_length=255)),
                ('time_zone', models.CharField(max_length=100)),
                ('total_users', models.PositiveIntegerField()),
                ('present_users', models.PositiveIntegerField()),
                ('current_productivity', models.PositiveIntegerField()),
                ('previous_productivity', models.PositiveIntegerField()),
                ('productivity_difference', models.PositiveIntegerField()),
                ('absent_users', models.PositiveIntegerField()),
                ('present_percent', models.PositiveIntegerField()),
                ('absent_percent', models.PositiveIntegerField()),
                ('healthy', models.PositiveIntegerField()),
                ('over_worked', models.PositiveIntegerField()),
                ('under_utilised', models.PositiveIntegerField()),
                ('working_time', models.PositiveIntegerField()),
                ('active_time', models.PositiveIntegerField()),
                ('idle_time', models.PositiveIntegerField()),
                ('break_time', models.PositiveIntegerField()),
                ('attendence_csv_url', models.CharField(max_length=255)),
                ('report_date', models.CharField(max_length=100)),
                ('report_type', models.CharField(max_length=30)),
                ('subscriber', models.OneToOneField(default='daily', null=True, on_delete=django.db.models.deletion.SET_NULL, to='email_app.subscribers')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('body', ckeditor_uploader.fields.RichTextUploadingField()),
                ('discription', models.TextField(default='hello')),
                ('template', models.FileField(upload_to='email')),
                ('is_default', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriberEmailData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.subscribers')),
            ],
        ),
        migrations.CreateModel(
            name='StaffUsersExcelFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excel_file_upload', models.FileField(upload_to='excel')),
                ('isActivated', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='StaffUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unverified_staff_email', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role_status', models.CharField(choices=[('ADMINISTRATOR', 'administrator'), ('CAMPAIGN_MANAGER', 'campaign_manager')], default='CAMPAIGN_MANAGER', max_length=20)),
                ('staff_status', models.CharField(choices=[('PENDING', 'Pending'), ('INVITED', 'Invited'), ('VERIFIED', 'Verified')], default='INVITED', max_length=15)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('list_type', models.CharField(choices=[('PRIVATE', 'Private'), ('PUBLIC', 'Public')], default='PUBLIC', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile')),
                ('subscriber', models.ManyToManyField(to='email_app.Subscribers')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='CampaignsLogSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscriber_email', models.CharField(max_length=100)),
                ('is_sent', models.BooleanField(default=False)),
                ('campaign_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.campaignslogs')),
            ],
        ),
        migrations.AddField(
            model_name='campaignslogs',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='email_app.companyprofile'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='list',
            field=models.ManyToManyField(to='email_app.List'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='campaigns',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='email_app.template'),
        ),
    ]
